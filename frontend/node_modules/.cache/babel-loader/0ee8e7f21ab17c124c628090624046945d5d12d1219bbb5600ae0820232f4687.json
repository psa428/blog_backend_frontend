{"ast":null,"code":"import { addComment, getComments, getPost, getUsers } from \"../api\";\nimport { sessions } from \"../sessions\";\nimport { ROLE } from \"../constants\";\nexport const addPostComment = async (hash, userId, postId, content) => {\n  const accessRoles = [ROLE.ADMIN, ROLE.MODERATOR, ROLE.READER];\n  const access = await sessions.access(hash, accessRoles);\n  if (!access) {\n    return {\n      error: 'Доступ запрещен',\n      res: null\n    };\n  }\n  await addComment(userId, postId, content);\n  const post = await getPost(postId);\n  const comments = await getComments(postId);\n  const users = await getUsers();\n  const commentsWithAutor = comments.map(comment => {\n    const user = users.find(({\n      id\n    }) => id === comment.authorId);\n    return {\n      ...comment,\n      author: user === null || user === void 0 ? void 0 : user.login\n    };\n  });\n  return {\n    error: null,\n    res: {\n      ...post,\n      comments: commentsWithAutor\n    }\n  };\n};","map":{"version":3,"names":["addComment","getComments","getPost","getUsers","sessions","ROLE","addPostComment","hash","userId","postId","content","accessRoles","ADMIN","MODERATOR","READER","access","error","res","post","comments","users","commentsWithAutor","map","comment","user","find","id","authorId","author","login"],"sources":["/home/psa/develop/result-school/blog/src/bff/operations/add-post-comment.js"],"sourcesContent":["import { addComment, getComments, getPost, getUsers } from \"../api\";\nimport { sessions } from \"../sessions\";\nimport { ROLE } from \"../constants\";\n\nexport const addPostComment = async (hash, userId, postId, content) => {\n    const accessRoles = [ROLE.ADMIN, ROLE.MODERATOR, ROLE.READER];\n\n    const access = await sessions.access(hash, accessRoles);\n\n    if (!access) {\n        return {\n            error:  'Доступ запрещен',\n            res:    null,\n        }\n    }\n\n\n    await addComment(userId, postId, content);\n\n    const post = await getPost(postId);\n\n    const comments = await getComments(postId);\n\n    \n\n    const users = await getUsers();\n\n    const commentsWithAutor = comments.map((comment) => {\n\n        const user = users.find(({ id }) => id === comment.authorId);\n        return {\n            ...comment,\n            author: user?.login,\n        }\n    });\n\n    return {\n        error:  null,\n        res:    {\n            ...post,\n            comments:   commentsWithAutor,\n        }\n        \n    }\n\n};"],"mappings":"AAAA,SAASA,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,QAAQ;AACnE,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,IAAI,QAAQ,cAAc;AAEnC,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,KAAK;EACnE,MAAMC,WAAW,GAAG,CAACN,IAAI,CAACO,KAAK,EAAEP,IAAI,CAACQ,SAAS,EAAER,IAAI,CAACS,MAAM,CAAC;EAE7D,MAAMC,MAAM,GAAG,MAAMX,QAAQ,CAACW,MAAM,CAACR,IAAI,EAAEI,WAAW,CAAC;EAEvD,IAAI,CAACI,MAAM,EAAE;IACT,OAAO;MACHC,KAAK,EAAG,iBAAiB;MACzBC,GAAG,EAAK;IACZ,CAAC;EACL;EAGA,MAAMjB,UAAU,CAACQ,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;EAEzC,MAAMQ,IAAI,GAAG,MAAMhB,OAAO,CAACO,MAAM,CAAC;EAElC,MAAMU,QAAQ,GAAG,MAAMlB,WAAW,CAACQ,MAAM,CAAC;EAI1C,MAAMW,KAAK,GAAG,MAAMjB,QAAQ,CAAC,CAAC;EAE9B,MAAMkB,iBAAiB,GAAGF,QAAQ,CAACG,GAAG,CAAEC,OAAO,IAAK;IAEhD,MAAMC,IAAI,GAAGJ,KAAK,CAACK,IAAI,CAAC,CAAC;MAAEC;IAAG,CAAC,KAAKA,EAAE,KAAKH,OAAO,CAACI,QAAQ,CAAC;IAC5D,OAAO;MACH,GAAGJ,OAAO;MACVK,MAAM,EAAEJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK;IAClB,CAAC;EACL,CAAC,CAAC;EAEF,OAAO;IACHb,KAAK,EAAG,IAAI;IACZC,GAAG,EAAK;MACJ,GAAGC,IAAI;MACPC,QAAQ,EAAIE;IAChB;EAEJ,CAAC;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}