{"ast":null,"code":"var _jsxFileName = \"/home/psa/develop/result-school/backend/blog/frontend/src/pages/users/users.js\",\n  _s = $RefreshSig$();\nimport { TableRow } from \"./components\";\nimport { PrivateContent } from \"../../components\";\nimport { UserRow } from \"./components\";\n// import { server } from \"../../bff/server\";\n\nimport { useEffect, useState } from \"react\";\nimport { ROLE } from \"../../constants/roles\";\nimport { checkAccess, request } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectUserRole } from \"../../selectors\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersContainer = ({\n  className\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [shouldUpdateUserList, setShouldUpdateUserList] = useState(false);\n  const userRole = useSelector(selectUserRole);\n  useEffect(() => {\n    if (!checkAccess([ROLE.ADMIN], userRole)) {\n      return;\n    }\n    ;\n    Promise.all([request('/users'), request('/users/roles')]).then(([usersRes, rolesRes]) => {\n      if (usersRes.error || rolesRes.error) {\n        setErrorMessage(usersRes.error || rolesRes.error);\n        return;\n      }\n      ;\n      setUsers(usersRes.data);\n      setRoles(rolesRes.data);\n    });\n  }, [shouldUpdateUserList, userRole]);\n  const onUserRemove = userId => {\n    if (!checkAccess([ROLE.ADMIN], userRole)) {\n      return;\n    }\n    ;\n    request(`/users/${userId}`, 'DELETE').then(() => {\n      setShouldUpdateUserList(!shouldUpdateUserList);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(PrivateContent, {\n    access: [ROLE.ADMIN],\n    serverError: errorMessage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-column\",\n            children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registred-at-column\",\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"role-column\",\n            children: \"\\u0420\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), users.map(({\n          id,\n          login,\n          registeredAt,\n          roleId\n        }) => /*#__PURE__*/_jsxDEV(UserRow, {\n          id: id,\n          login: login,\n          registeredAt: registeredAt,\n          roleId: roleId,\n          roles: roles.filter(({\n            id: roleId\n          }) => roleId !== ROLE.GUEST),\n          onUserRemove: () => onUserRemove(id)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(UsersContainer, \"ss4Yen2hoZxmgAJTmo5spI6H8s4=\", false, function () {\n  return [useSelector];\n});\n_c = UsersContainer;\nexport const Users = styled(UsersContainer)`\n    display:    flex;\n    flex-direction: column;  \n    align-items:   center;\n    margin: 0   auto;\n    width:  570px;\n    front-size: 18px;\n\n   \n\n`;\nvar _c;\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"names":["TableRow","PrivateContent","UserRow","useEffect","useState","ROLE","checkAccess","request","useSelector","selectUserRole","styled","jsxDEV","_jsxDEV","UsersContainer","className","_s","users","setUsers","roles","setRoles","errorMessage","setErrorMessage","shouldUpdateUserList","setShouldUpdateUserList","userRole","ADMIN","Promise","all","then","usersRes","rolesRes","error","data","onUserRemove","userId","access","serverError","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","login","registeredAt","roleId","filter","GUEST","_c","Users","$RefreshReg$"],"sources":["/home/psa/develop/result-school/backend/blog/frontend/src/pages/users/users.js"],"sourcesContent":["import {  TableRow } from \"./components\";\nimport { PrivateContent } from \"../../components\";\n\nimport { UserRow } from \"./components\";\n// import { server } from \"../../bff/server\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { ROLE } from \"../../constants/roles\";\nimport { checkAccess, request } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectUserRole } from \"../../selectors\";\nimport styled from \"styled-components\";\n\nconst UsersContainer = ({ className }) => {\n    const [users, setUsers] = useState([]);\n    const [roles, setRoles] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n    \n    const [shouldUpdateUserList, setShouldUpdateUserList] = useState(false);\n    const userRole = useSelector(selectUserRole);\n\n\n    useEffect(() => {\n        if (!checkAccess([ROLE.ADMIN], userRole)) {\n            return;\n        };\n\n        Promise.all([\n            request('/users'), \n            request('/users/roles'),\n        ]).then(([usersRes, rolesRes]) => {\n            if (usersRes.error || rolesRes.error) {\n               \n                setErrorMessage(usersRes.error || rolesRes.error);\n                return;\n            };\n            setUsers(usersRes.data);\n            \n            setRoles(rolesRes.data);\n            \n        });\n        \n    }, [ shouldUpdateUserList, userRole]);\n\n    const onUserRemove = (userId) => {\n        if (!checkAccess([ROLE.ADMIN], userRole)) {\n            return;\n        };\n        request(`/users/${userId}`, 'DELETE').then(() => {    \n            setShouldUpdateUserList(!shouldUpdateUserList);\n\n        })\n    };\n\n    return (\n        <PrivateContent access={[ROLE.ADMIN]} serverError={errorMessage}>\n            <div className={className}>           \n                <h2>Пользователи</h2>\n                <div>\n                    <TableRow>\n                        <div className=\"login-column\">Логин</div>\n                        <div className=\"registred-at-column\">Дата регистрации</div>\n                        <div className=\"role-column\">Роль</div>\n                    </TableRow>\n                   \n                    {users.map(({ id, login, registeredAt, roleId }) => (\n                        <UserRow \n                            key={id} \n                            id={id}\n                            login={login} \n                            registeredAt={registeredAt} \n                            roleId={roleId}  \n                            roles={roles.filter(({ id: roleId }) => roleId !== ROLE.GUEST)}\n                            onUserRemove={() => onUserRemove(id)}\n                        />    \n                    ))}  \n\n                </div>    \n            </div>  \n        </PrivateContent> \n    );\n\n}\n\nexport const Users = styled(UsersContainer)`\n    display:    flex;\n    flex-direction: column;  \n    align-items:   center;\n    margin: 0   auto;\n    width:  570px;\n    front-size: 18px;\n\n   \n\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}