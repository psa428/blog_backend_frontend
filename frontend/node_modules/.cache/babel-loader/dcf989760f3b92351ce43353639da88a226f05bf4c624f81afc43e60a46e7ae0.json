{"ast":null,"code":"var _jsxFileName = \"/home/psa/develop/result-school/backend/blog/frontend/src/pages/post/components/comments/comments.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Icon } from \"../../../../components\";\nimport { Comment } from './components';\nimport styled from \"styled-components\";\nimport { selectUserRole } from \"../../../../selectors\";\nimport { addCommentAsync } from \"../../../../actions\";\nimport { ROLE } from \"../../../../bff/constants\";\nimport { PROP_TYPE } from '../../../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsContainer = ({\n  className,\n  comments,\n  postId\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const dispatch = useDispatch();\n  const userRole = useSelector(selectUserRole);\n  const onNewCommentAdd = (userId, postId, content) => {\n    dispatch(addCommentAsync(postId, content));\n    setNewComment('');\n  };\n  const isGuest = userRole === ROLE.GUEST;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [!isGuest && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"comment\",\n        value: newComment,\n        placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439...\",\n        onChange: ({\n          target\n        }) => setNewComment(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        id: \"fa-paper-plane-o\",\n        margin: \"0 7px 0 0\",\n        size: \"18px\",\n        onClick: () => onNewCommentAdd(postId, newComment)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments.map(({\n        id,\n        author,\n        content,\n        publishedAt\n      }) => /*#__PURE__*/_jsxDEV(Comment, {\n        postId: postId,\n        id: id,\n        author: author,\n        content: content,\n        publishedAt: publishedAt\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentsContainer, \"+DeQMR9wXXFZWsxP6I6BTq0Ump0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommentsContainer;\nexport const Comments = styled(CommentsContainer)`\n    \n    width:  580px;\n    margin: 0 auto;\n\n    & .new-comment  {\n        display:    flex;\n        width:  100%;\n        margin: 20px 0 10px;\n    }\n\n    & .new-comment textarea {\n        width:  550%;\n        height: 120px;\n        font-size:  18px;\n        resize: none;\n    }\n`;\nComments.propTypes = {\n  comments: PropTypes.arrayOf(PROP_TYPE.COMMENT),\n  postId: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"CommentsContainer\");","map":{"version":3,"names":["PropTypes","useState","useDispatch","useSelector","Icon","Comment","styled","selectUserRole","addCommentAsync","ROLE","PROP_TYPE","jsxDEV","_jsxDEV","CommentsContainer","className","comments","postId","_s","newComment","setNewComment","dispatch","userRole","onNewCommentAdd","userId","content","isGuest","GUEST","children","name","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","id","margin","size","onClick","map","author","publishedAt","_c","Comments","propTypes","arrayOf","COMMENT","string","isRequired","$RefreshReg$"],"sources":["/home/psa/develop/result-school/backend/blog/frontend/src/pages/post/components/comments/comments.js"],"sourcesContent":["import PropTypes from 'prop-types'; \nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Icon } from \"../../../../components\";\nimport { Comment } from './components';\nimport styled from \"styled-components\";\nimport { selectUserRole } from \"../../../../selectors\";\nimport { addCommentAsync } from \"../../../../actions\";\nimport { ROLE } from \"../../../../bff/constants\";\nimport { PROP_TYPE } from '../../../../constants';\n\n\nconst CommentsContainer = ({ className, comments, postId }) => {\n    const [newComment, setNewComment] = useState('');\n    const dispatch =  useDispatch();\n    const userRole = useSelector(selectUserRole);\n\n    const onNewCommentAdd = (userId, postId, content) => {\n        dispatch(addCommentAsync( postId, content));\n        setNewComment('');\n    \n};\nconst   isGuest = userRole === ROLE.GUEST;\n    return (\n        <div className={className}>\n        {!isGuest && (\n            <div className=\"new-comment\">\n                <textarea name=\"comment\" value={newComment} placeholder=\"Комментарий...\" \n                    onChange={({ target }) => setNewComment(target.value)}\n                ></textarea>\n                <Icon\n                    id=\"fa-paper-plane-o\"\n                    margin=\"0 7px 0 0\"\n                    size=\"18px\"\n                    onClick={() => onNewCommentAdd( postId, newComment)}\n                />   \n            </div> \n        )}\n            <div className=\"comments\">\n\n                {comments.map(({ id, author, content, publishedAt }) => \n                    <Comment \n                        key={id}\n                        postId={postId}\n                        id={id}\n                        author={author}\n                        content={content}\n                        publishedAt={publishedAt}\n                    />\n                \n                )}\n            </div>\n               \n        </div>\n    )    \n};\n\n\nexport const Comments = styled(CommentsContainer)`\n    \n    width:  580px;\n    margin: 0 auto;\n\n    & .new-comment  {\n        display:    flex;\n        width:  100%;\n        margin: 20px 0 10px;\n    }\n\n    & .new-comment textarea {\n        width:  550%;\n        height: 120px;\n        font-size:  18px;\n        resize: none;\n    }\n`;\n\nComments.propTypes = {\n    comments:   PropTypes.arrayOf(PROP_TYPE.COMMENT),\n    postId: PropTypes.string.isRequired,\n\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}