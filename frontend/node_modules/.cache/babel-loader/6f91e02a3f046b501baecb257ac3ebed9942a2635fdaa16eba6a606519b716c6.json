{"ast":null,"code":"import { ACTION_TYPE } from \"../actions/action-type\";\nconst initialPostState = {\n  id: '',\n  title: '',\n  imageUrl: '',\n  content: '',\n  publishedAT: '',\n  comments: []\n};\nexport const postReducer = (state = initialPostState, action) => {\n  switch (action.type) {\n    case ACTION_TYPE.ADD_COMMENT:\n      return {\n        ...state,\n        comments: [...state.comments, action.payload]\n      };\n    case ACTION_TYPE.REMOVE_COMMENT:\n      console.log('in postReducer payload = ', action.payload);\n      console.log('in postReducer state.comments = ', state.comments);\n      let arr = state.comments.filter(comment => comment.id !== action.payload);\n      return {\n        ...state,\n        comments: arr\n      };\n    case ACTION_TYPE.SET_POST_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case ACTION_TYPE.RESET_POST_DATA:\n      return initialPostState;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ACTION_TYPE","initialPostState","id","title","imageUrl","content","publishedAT","comments","postReducer","state","action","type","ADD_COMMENT","payload","REMOVE_COMMENT","console","log","arr","filter","comment","SET_POST_DATA","RESET_POST_DATA"],"sources":["/home/psa/develop/result-school/backend/blog/frontend/src/reducers/post-reducer.js"],"sourcesContent":["import { ACTION_TYPE } from \"../actions/action-type\";\n\nconst initialPostState = {\n    id: '',\n    title:  '',\n    imageUrl:   '',\n    content:    '',\n    publishedAT:    '',\n    comments:   [],\n\n};\n\nexport const postReducer = (state = initialPostState, action) => {\n    \n    switch (action.type) {\n        case ACTION_TYPE.ADD_COMMENT:\n            \n            return {\n                ...state,\n                comments: [\n                    ...state.comments,\n                    action.payload,\n                ]\n            };\n        \n        case ACTION_TYPE.REMOVE_COMMENT:\n            console.log('in postReducer payload = ', action.payload)\n            console.log('in postReducer state.comments = ', state.comments)\n            let arr = state.comments.filter(comment => comment.id !== action.payload);\n            return {\n                ...state,\n                comments: arr,\n            };\n\n        case ACTION_TYPE.SET_POST_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            };    \n        case ACTION_TYPE.RESET_POST_DATA:\n            return initialPostState;\n        default:\n            return state;\n    }\n       \n};"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AAEpD,MAAMC,gBAAgB,GAAG;EACrBC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAG,EAAE;EACVC,QAAQ,EAAI,EAAE;EACdC,OAAO,EAAK,EAAE;EACdC,WAAW,EAAK,EAAE;EAClBC,QAAQ,EAAI;AAEhB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGR,gBAAgB,EAAES,MAAM,KAAK;EAE7D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKX,WAAW,CAACY,WAAW;MAExB,OAAO;QACH,GAAGH,KAAK;QACRF,QAAQ,EAAE,CACN,GAAGE,KAAK,CAACF,QAAQ,EACjBG,MAAM,CAACG,OAAO;MAEtB,CAAC;IAEL,KAAKb,WAAW,CAACc,cAAc;MAC3BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEN,MAAM,CAACG,OAAO,CAAC;MACxDE,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEP,KAAK,CAACF,QAAQ,CAAC;MAC/D,IAAIU,GAAG,GAAGR,KAAK,CAACF,QAAQ,CAACW,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACjB,EAAE,KAAKQ,MAAM,CAACG,OAAO,CAAC;MACzE,OAAO;QACH,GAAGJ,KAAK;QACRF,QAAQ,EAAEU;MACd,CAAC;IAEL,KAAKjB,WAAW,CAACoB,aAAa;MAC1B,OAAO;QACH,GAAGX,KAAK;QACR,GAAGC,MAAM,CAACG;MACd,CAAC;IACL,KAAKb,WAAW,CAACqB,eAAe;MAC5B,OAAOpB,gBAAgB;IAC3B;MACI,OAAOQ,KAAK;EACpB;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}