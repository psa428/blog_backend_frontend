{"ast":null,"code":"var _jsxFileName = \"/home/psa/develop/result-school/backend/blog/frontend/src/pages/post/components/post-form/post-form.js\",\n  _s = $RefreshSig$();\nimport { useLayoutEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Icon, Input } from \"../../../../components\";\nimport { SpecialPanel } from \"../special-panel/special-panel\";\nimport { sanitizeContent } from \"./utils\";\nimport { savePostAsync } from \"../../../../actions\";\nimport styled from \"styled-components\";\nimport { PROP_TYPE } from '../../../../constants/prop-type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostFormContainer = ({\n  className,\n  post: {\n    id,\n    title,\n    imageUrl,\n    content,\n    publishedAt\n  }\n}) => {\n  _s();\n  const [imageUrlValue, setImageUrlValue] = useState(imageUrl);\n  const [titleValue, setTitleValue] = useState(title);\n  const contentRef = useRef(null);\n  useLayoutEffect(() => {\n    setImageUrlValue(imageUrl);\n    setTitleValue(title);\n  }, [imageUrl, title]);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onSave = () => {\n    const newContent = sanitizeContent(contentRef.current.innerHTML);\n    dispatch(savePostAsync({\n      imageUrl: imageUrlValue,\n      title: titleValue,\n      content: newContent\n    })).then(({\n      id\n    }) => navigate(`/post/${id}`));\n  };\n  const onImageChange = ({\n    target\n  }) => setImageUrlValue(target.value);\n  const onTitleChange = ({\n    target\n  }) => setTitleValue(target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: imageUrlValue,\n      placeholder: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435...\",\n      onChange: onImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: titleValue,\n      placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A...\",\n      onChange: onTitleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SpecialPanel, {\n      id: id,\n      publishedAt: publishedAt,\n      margin: \"20px 0\",\n      editButton: /*#__PURE__*/_jsxDEV(Icon, {\n        id: \"fa-floppy-o\",\n        size: \"21px\",\n        onClick: onSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentRef,\n      contentEditable: true,\n      suppressContentEditableWarning: true,\n      className: \"post-text\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(PostFormContainer, \"fHZ1p6Eh5qFF8Q3KlwB2HmYvAzQ=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = PostFormContainer;\nexport const PostForm = styled(PostFormContainer)`\n    & img {\n        float:  left;\n        margin: 0 20px 10px 0;\n    } \n\n    \n    & .post-text {\n    min-height: 80px;\n        border: 1px solid #000;\n        font-size:  18px;\n        white-space:    pre-line;\n    }\n\n`;\nPostForm.propTypes = {\n  post: PROP_TYPE.POST.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"PostFormContainer\");","map":{"version":3,"names":["useLayoutEffect","useRef","useState","useDispatch","useNavigate","Icon","Input","SpecialPanel","sanitizeContent","savePostAsync","styled","PROP_TYPE","jsxDEV","_jsxDEV","PostFormContainer","className","post","id","title","imageUrl","content","publishedAt","_s","imageUrlValue","setImageUrlValue","titleValue","setTitleValue","contentRef","dispatch","navigate","onSave","newContent","current","innerHTML","then","onImageChange","target","value","onTitleChange","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","margin","editButton","size","onClick","ref","contentEditable","suppressContentEditableWarning","_c","PostForm","propTypes","POST","isRequired","$RefreshReg$"],"sources":["/home/psa/develop/result-school/backend/blog/frontend/src/pages/post/components/post-form/post-form.js"],"sourcesContent":["import { useLayoutEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Icon, Input} from \"../../../../components\";\nimport { SpecialPanel } from \"../special-panel/special-panel\";\nimport { sanitizeContent } from \"./utils\";\nimport { savePostAsync } from \"../../../../actions\";\nimport styled from \"styled-components\";\n\nimport { PROP_TYPE } from '../../../../constants/prop-type';\n\n\nconst PostFormContainer = ({ \n    className, \n    post:   { id, title, imageUrl, content, publishedAt },\n    \n}) => {\n    const [imageUrlValue, setImageUrlValue] = useState(imageUrl);\n    const [titleValue, setTitleValue] = useState(title);\n    const contentRef = useRef(null);\n\n    useLayoutEffect(() => {\n        setImageUrlValue(imageUrl);\n        setTitleValue(title);\n\n    }, [imageUrl, title]);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n\n    const onSave = () => {\n        \n        const newContent = sanitizeContent(contentRef.current.innerHTML);\n\n        dispatch(\n            savePostAsync({ \n                imageUrl: imageUrlValue, \n                title: titleValue, \n                content: newContent\n            }),\n        ).then(({ id }) =>         \n            navigate(`/post/${id}`)\n\n        );\n    }; \n\n    const onImageChange = ({ target }) => setImageUrlValue(target.value);\n    const onTitleChange = ({ target }) => setTitleValue(target.value);\n    \n    return (\n        <div className={className}>\n            <Input value={imageUrlValue} placeholder=\"Изображение...\" onChange={onImageChange} />\n            <Input value={titleValue} placeholder=\"Заголовок...\"  onChange={onTitleChange} />\n            <SpecialPanel \n                id={id}\n                publishedAt={publishedAt} \n                margin=\"20px 0\" \n                editButton={\n                    <Icon\n                        id=\"fa-floppy-o\"\n                        size=\"21px\"\n                        \n                        onClick={onSave}\n                    />    \n                } \n            />\n            <div \n                ref={contentRef}\n                contentEditable={true}\n                suppressContentEditableWarning={true}\n                className=\"post-text\">\n                {content}\n            </div>\n\n        </div>\n\n    );\n\n};\n\nexport const PostForm = styled(PostFormContainer)`\n    & img {\n        float:  left;\n        margin: 0 20px 10px 0;\n    } \n\n    \n    & .post-text {\n    min-height: 80px;\n        border: 1px solid #000;\n        font-size:  18px;\n        white-space:    pre-line;\n    }\n\n`;\nPostForm.propTypes = {\n    post:   PROP_TYPE.POST.isRequired,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}