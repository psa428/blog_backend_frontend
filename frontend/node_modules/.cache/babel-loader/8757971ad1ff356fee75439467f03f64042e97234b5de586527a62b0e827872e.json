{"ast":null,"code":"var _jsxFileName = \"/home/psa/develop/result-school/blog/src/pages/post/post.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useMatch, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PostContent } from \"./components/post-content/post-content\";\nimport { Comments } from \"./components\";\nimport { Error } from \"../../components/error/error\";\nimport { useServerRequest } from \"../../hooks\";\nimport { RESET_POST_DATA } from \"../../actions\";\nimport { loadPostAsync } from \"../../actions/load-post-async\";\nimport { selectPost } from \"../../selectors\";\nimport styled from \"styled-components\";\nimport { PostForm } from \"./components/post-form/post-form\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostContainer = ({\n  className\n}) => {\n  _s();\n  const [error, setError] = useState(true);\n  const dispatch = useDispatch();\n  const params = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const isEditing = useMatch('/post/:id/edit');\n  const isCreating = useMatch('/post');\n  const requestServer = useServerRequest();\n  const post = useSelector(selectPost);\n  useLayoutEffect(() => {\n    dispatch(RESET_POST_DATA);\n  }, [dispatch, isCreating]);\n  useEffect(() => {\n    if (isCreating) {\n      setIsLoading(false);\n      return;\n    }\n    ;\n    dispatch(loadPostAsync(requestServer, params.id));\n    // .then((postData) => {   \n    // console.log(postData);       \n    //     setError(postData.error);\n    //     setIsLoading(false);\n    //   })\n  }, [dispatch, requestServer, params.id, isCreating]);\n  setError(false);\n  if (isLoading) {\n    return null;\n  }\n  return error ? /*#__PURE__*/_jsxDEV(Error, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [isCreating || isEditing ? /*#__PURE__*/_jsxDEV(PostForm, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostContent, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        comments: post.comments,\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(PostContainer, \"vpR1XXMwB+sdcJWgo7Wc9LaWwBU=\", false, function () {\n  return [useDispatch, useParams, useMatch, useMatch, useServerRequest, useSelector];\n});\n_c = PostContainer;\nexport const Post = styled(PostContainer)`\n    margin: 40px 0;\n    padding:    0 80px;\n\n`;\nvar _c;\n$RefreshReg$(_c, \"PostContainer\");","map":{"version":3,"names":["useEffect","useLayoutEffect","useState","useMatch","useParams","useDispatch","useSelector","PostContent","Comments","Error","useServerRequest","RESET_POST_DATA","loadPostAsync","selectPost","styled","PostForm","jsxDEV","_jsxDEV","Fragment","_Fragment","PostContainer","className","_s","error","setError","dispatch","params","isLoading","setIsLoading","isEditing","isCreating","requestServer","post","id","fileName","_jsxFileName","lineNumber","columnNumber","children","comments","postId","_c","Post","$RefreshReg$"],"sources":["/home/psa/develop/result-school/blog/src/pages/post/post.js"],"sourcesContent":["import { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useMatch, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PostContent } from \"./components/post-content/post-content\";\nimport { Comments } from \"./components\";\nimport { Error } from \"../../components/error/error\";\nimport { useServerRequest } from \"../../hooks\";\nimport { RESET_POST_DATA } from \"../../actions\";\nimport { loadPostAsync } from \"../../actions/load-post-async\";\nimport { selectPost } from \"../../selectors\";\nimport styled from \"styled-components\";\nimport { PostForm } from \"./components/post-form/post-form\";\n\n\nconst PostContainer = ({ className }) => {\n\n    const [error, setError] = useState(true);\n    const dispatch = useDispatch();\n    const params = useParams();\n    const [isLoading, setIsLoading] = useState(true);\n    const isEditing = useMatch('/post/:id/edit');\n    const isCreating = useMatch('/post');\n    const requestServer = useServerRequest();\n\n    const post =  useSelector(selectPost);\n\n\n    useLayoutEffect(() => {\n        dispatch(RESET_POST_DATA);\n    }, [dispatch, isCreating]);\n \n    useEffect(() => {\n\n        if (isCreating) {\n            setIsLoading(false);\n            return;\n        };\n\n        dispatch(loadPostAsync(requestServer, params.id));\n            // .then((postData) => {   \n                // console.log(postData);       \n            //     setError(postData.error);\n            //     setIsLoading(false);\n            //   })\n    }, [dispatch, requestServer, params.id, isCreating]);\n    setError(false);\n    if (isLoading) {\n        return null;\n    }\n    \n    return error ? (\n        <Error error={error} />\n    ) : (    \n        <div className={className}>\n            {isCreating || isEditing ? (\n                <PostForm post={post} />\n            ) : (\n                <>\n                    <PostContent post={post} /> \n                    <Comments comments={post.comments} postId={post.id}/>\n                </>\n            )};\n            \n            \n        </div>\n\n    );\n};\n\nexport const Post = styled(PostContainer)`\n    margin: 40px 0;\n    padding:    0 80px;\n\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}